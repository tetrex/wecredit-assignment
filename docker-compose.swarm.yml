services:
  prod_postgres:
    image: postgres:latest
    env_file:
      - ./.env.prod
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    deploy:
      replicas: 5 # Run 5 database replicas
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - prod-network

  prod_server:
    image: prod_server_image
    build:
      context: .
      dockerfile: ./server.prod.dockerfile
    ports:
      - 8000:80
    env_file:
      - ./.env.prod
    depends_on:
      - prod_postgres
    deploy:
      replicas: 10
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    networks:
      - prod-network

networks:
  prod-network:
    driver: overlay

volumes:
  pg_data:
