name: deploy main env

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v3
      - name: build and push docker image
        run: |
          docker login --username tetrex --password ${{ secrets.GH_PKGS_TOKEN }} ghcr.io
          docker build -f ./docker/server/server.prod.dockerfile . \
            --tag ghcr.io/tetrex/wecredit-assignment:latest
          docker push ghcr.io/tetrex/wecredit-assignment:latest

  env-server-1:
    needs: [build]
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: make .env.main
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_PG_CONNECTION_STRING: ${{ secrets.PG_CONNECTION_STRING }}
          envkey_PG_MIGRATION_STRING: ${{ secrets.PG_MIGRATION_STRING }}
          envkey_APP_ENV: ${{ secrets.APP_ENV }}
          directory: ./
          file_name: .env.main
          fail_on_empty: true
          sort_keys: false

      - name: scp .env.main to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_1_IP }} # server's IP address
          username: root # server's username
          key: ${{ secrets.SERVER_1_KEY }} # server's SSH private key  ~/.ssh/id_rsa
          source: "./.env.main"
          target: "/root/api-v2-golang"

  env-server-2:
    needs: [build]
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: make .env.main
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_PG_CONNECTION_STRING: ${{ secrets.PG_CONNECTION_STRING }}
          envkey_PG_MIGRATION_STRING: ${{ secrets.PG_MIGRATION_STRING }}
          envkey_APP_ENV: ${{ secrets.APP_ENV }}
          directory: ./
          file_name: .env.main
          fail_on_empty: true
          sort_keys: false

      - name: scp .env.main to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_2_IP }} # server's IP address
          username: root # server's username
          key: ${{ secrets.SERVER_2_KEY }} # server's SSH private key  ~/.ssh/id_rsa
          source: "./.env.main"
          target: "/root/api-v2-golang"

  deploy-server-1:
    needs: [build, env-server-1, env-server-2]
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: pull latest docker image and start server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_1_IP }}
          username: root
          key: ${{ secrets.SERVER_1_KEY }}
          script: |
            cd /root/api-v2-golang
            git pull
            git checkout main
            docker login --username tetrex --password ${{ secrets.GH_PKGS_TOKEN }} ghcr.io
            docker compose -f ./docker-compose.prod.yml pull main-server
            docker compose -f ./docker-compose.prod.yml up -d --remove-orphans
            docker image prune -f

  deploy-server-2:
    needs: [build, env-server-1, env-server-2]
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: pull latest docker image and start server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_2_IP }}
          username: root
          key: ${{ secrets.SERVER_2_KEY }}
          script: |
            cd /root/api-v2-golang
            git pull
            git checkout main
            docker login --username tetrex --password ${{ secrets.GH_PKGS_TOKEN }} ghcr.io
            docker compose -f ./docker-compose.prod.yml pull main-server
            docker compose -f ./docker-compose.prod.yml up -d --remove-orphans
            docker image prune -f
