// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: mobile_otp.sql

package db

import (
	"context"
)

const checkOtp = `-- name: CheckOtp :exec
SELECT COUNT(*) > 0 AS is_valid
FROM mobile_otp
WHERE user_id = $1
  AND otp = $2
  AND valid_till > NOW()
`

type CheckOtpParams struct {
	UserID int32  `json:"user_id"`
	Otp    string `json:"otp"`
}

func (q *Queries) CheckOtp(ctx context.Context, arg CheckOtpParams) error {
	_, err := q.db.Exec(ctx, checkOtp, arg.UserID, arg.Otp)
	return err
}

const createNewOtp = `-- name: CreateNewOtp :exec
INSERT INTO mobile_otp (user_id, otp, valid_till)
VALUES ($1, $2, NOW() + INTERVAL '5 minutes')
`

type CreateNewOtpParams struct {
	UserID int32  `json:"user_id"`
	Otp    string `json:"otp"`
}

func (q *Queries) CreateNewOtp(ctx context.Context, arg CreateNewOtpParams) error {
	_, err := q.db.Exec(ctx, createNewOtp, arg.UserID, arg.Otp)
	return err
}
